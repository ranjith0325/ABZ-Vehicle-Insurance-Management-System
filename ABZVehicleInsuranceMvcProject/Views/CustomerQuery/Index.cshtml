@model IEnumerable<ABZVehicleInsuranceMvcProject.Models.CustomerQuery>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@if (TempData["AlertMessage"] != null)
{


    <div id="alertMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Success  !</strong>    @TempData["AlertMessage"]
    </div>
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
           $(document).ready(function() {
        var alertMessage = $("#alertMessage");

        if (alertMessage.length > 0) {
            // Hide the alert after 3 seconds with a fade-out effect
            setTimeout(function() {
                alertMessage.fadeOut(); // This will fade out the alert
            }, 3000); // 3000 milliseconds = 3 seconds
        }
    });
</script>


<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<form method="get" asp-action="Index">
    <div class="row mb-3">
        <div class="col-md-4">
            <label for="QueryStatus" class="form-label">Filter by Query Status</label>
            <select id="QuerySatusDropDown" name="selectedQueryStatus" class="form-select">
                <option value="">-- Select Query Status--</option>
                @foreach (var fuelType in (List<SelectListItem>)ViewBag.FuelTypes)
                {
                    <option value="@fuelType.Value"
                            selected="@(fuelType.Value == (Context.Request.Query["selectedQueryStatus"].ToString() ?? "") ? "selected" : null)">
                        @fuelType.Text
                    </option>
                }
            </select>

        </div>
        <div class="col-md-2 d-flex align-items-end">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
    </div>
</form>
<table class="table table-hover table-responsive">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.QueryID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.QueryDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.QueryID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QueryDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                   @*  @Html.ActionLink("Edit", "Edit", new { queryID = item.QueryID }, new { @class = "btn btn-primary" }) |
                    @Html.ActionLink("Details", "Details", new { queryID = item.QueryID }, new { @class = "btn btn-success" }) |
                    @Html.ActionLink("Delete", "Delete", new { queryID = item.QueryID }, new { @class = "btn btn-danger" })|
                    @Html.ActionLink("ByCustomer", "ByCustomer", new { customerID = item.CustomerID }, new { @class = "btn btn-primary" }) *@
                    <div class="dropdown">
                        <button class="btn btn-success dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                            Actions
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <li>
                                @Html.ActionLink("Edit", "Edit", new { queryID = item.QueryID }, new { @class = "dropdown-item" })
                            </li>
                            <li>
                                @Html.ActionLink("Details", "Details", new { queryID = item.QueryID }, new { @class = "dropdown-item" })
                            </li>
                            <li>
                                @Html.ActionLink("Delete", "Delete", new { queryID = item.QueryID }, new { @class = "dropdown-item" })
                            </li>
                            <li>
                                @Html.ActionLink("ByCustomer", "ByCustomer", new { customerID = item.CustomerID }, new { @class = "dropdown-item" })
                            </li>
                        </ul>
                    </div>
            </td>
        </tr>
}
    </tbody>
</table>
