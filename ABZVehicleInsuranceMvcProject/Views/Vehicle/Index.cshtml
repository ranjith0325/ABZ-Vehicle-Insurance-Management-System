@model IEnumerable<ABZVehicleInsuranceMvcProject.Models.Vehicle>
<!DOCTYPE html>
@* <html>
<head>
    <title>Index Page</title>
</head>
<body style="background-color: pink;">
    <h1>Welcome to the Index Page</h1>
    <p>This is an example of changing the background color using inline CSS.</p>
</body>
</html>
 *@
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (TempData["AlertMessage"] != null)
{


    <div id="alertMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Success  !</strong>    @TempData["AlertMessage"]
    </div>
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
           $(document).ready(function() {
        var alertMessage = $("#alertMessage");

        if (alertMessage.length > 0) {
            // Hide the alert after 3 seconds with a fade-out effect
            setTimeout(function() {
                alertMessage.fadeOut(); // This will fade out the alert
            }, 3000); // 3000 milliseconds = 3 seconds
        }
    });
</script>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<table class="table table-hover table-responsive">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.RegNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RegAuthority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Make)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Model)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FuelType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Variant)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EngineNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ChassisNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EngineCapacity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SeatingCapacity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MfgYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RegDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BodyType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeasedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OwnerId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RegNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegAuthority)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Make)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FuelType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Variant)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EngineNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ChassisNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EngineCapacity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SeatingCapacity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MfgYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BodyType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LeasedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerId)
            </td>
            <td>
                   @*  @Html.ActionLink("Edit", "Edit", new { regNo = item.RegNo }, new { @class = "btn btn-primary" }) |
                    @Html.ActionLink("Details", "Details", new { regNo = item.RegNo }, new { @class = "btn btn-success" }) |
                    @Html.ActionLink("Delete", "Delete", new { regNo = item.RegNo }, new { @class = "btn btn-danger" })|
                    @Html.ActionLink("ByCustomer", "ByCustomer", new { customerId = item.OwnerId }, new { @class = "btn btn-primary" }) *@
                    <div class="dropdown">
                        <button class="btn btn-success dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                            Actions
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <li>
                                @Html.ActionLink("Edit", "Edit", new { regNo = item.RegNo }, new { @class = "dropdown-item" })
                            </li>
                            <li>
                                @Html.ActionLink("Details", "Details", new { regNo = item.RegNo }, new { @class = "dropdown-item" })
                            </li>
                            <li>
                                @Html.ActionLink("Delete", "Delete", new { regNo = item.RegNo }, new { @class = "dropdown-item" })
                            </li>
                            <li>
                                @Html.ActionLink("ByCustomer", "ByCustomer", new { customerId = item.OwnerId }, new { @class = "dropdown-item" })
                            </li>
                        </ul>
                    </div>
            </td>
        </tr>
}
    </tbody>
</table>
