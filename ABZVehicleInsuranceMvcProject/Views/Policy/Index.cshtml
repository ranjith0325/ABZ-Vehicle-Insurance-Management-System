@model IEnumerable<ABZVehicleInsuranceMvcProject.Models.Policy>

@{
	ViewData["Title"] = "Index";
}

<h1>Index</h1>
@if (TempData["AlertMessage"] != null)
{


	<div id="alertMessage" class="alert alert-success alert-dismissible fade show" role="alert">
		<strong>Success  !</strong>    @TempData["AlertMessage"]
	</div>
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
		   $(document).ready(function() {
		var alertMessage = $("#alertMessage");

		if (alertMessage.length > 0) {
			// Hide the alert after 3 seconds with a fade-out effect
			setTimeout(function() {
				alertMessage.fadeOut(); // This will fade out the alert
			}, 3000); // 3000 milliseconds = 3 seconds
		}
	});
</script>

<p>
	<a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<table class="table table-hover table-responsive">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.PolicyNo)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ProposalNo)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.NoClaimBonus)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ReceiptNo)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ReceiptDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PaymentMode)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Amount)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.PolicyNo)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ProposalNo)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.NoClaimBonus)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ReceiptNo)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ReceiptDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.PaymentMode)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Amount)
				</td>
				<td>
					@* @Html.ActionLink("Edit", "Edit", new { policyNo = item.PolicyNo }, new { @class = "btn btn-primary" }) |
                    @Html.ActionLink("Details", "Details", new { policyNo = item.PolicyNo }, new { @class = "btn btn-success" }) |
                    @Html.ActionLink("Delete", "Delete", new { policyNo = item.PolicyNo }, new { @class = "btn btn-danger" }) |*@
					@* <div class="d-flex align-items-center">
						<div class="dropdown me-2"> *@
					<div class="dropdown">
						<button class="btn btn-success dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
							Actions
						</button>
						<ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
							<li>
								@Html.ActionLink("Edit", "Edit", new { policyNo = item.PolicyNo }, new { @class = "dropdown-item" })
							</li>
							<li>
								@Html.ActionLink("Details", "Details", new { policyNo = item.PolicyNo }, new { @class = "dropdown-item" })
							</li>
							<li>
								@Html.ActionLink("Delete", "Delete", new { policyNo = item.PolicyNo }, new { @class = "dropdown-item" })
							</li>
							<li>
								@Html.ActionLink("Add-on", "index", "PolicyAddon", new { policyNo = item.PolicyNo }, new { @class = "dropdown-item" })
							</li>
						</ul>
						@* </div>
						@Html.ActionLink("Add-on", "index", "PolicyAddon", new { policyNo = item.PolicyNo }, new { @class = "btn btn-primary" })
					</div> *@
				</td>
			</tr>
		}
	</tbody>
</table>
